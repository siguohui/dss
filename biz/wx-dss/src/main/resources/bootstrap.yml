jasypt:
  encryptor:
    password: xiongbangwen
spring:
  cache:
    redis:
      key-prefix: wx
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      password: 123456
      timeout: 6000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  thymeleaf:
    cache: false
    check-template: true
    check-template-location: true
    servlet:
      content-type: text/html
    enabled: true
    encoding: UTF-8
    excluded-view-names:
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
  mvc:
    static-path-pattern: /static/**
  web:
    resources:
      static-locations: classpath:/static
  datasource:
    druid:
      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid
        login-password: druid
        # IP白名单
        allow: 127.0.0.1
        # IP黑名单（共同存在时，deny优先于allow）
        deny:
      filter:
        stat:
          enabled: true # 开启DruidDataSource状态监控
          log-slow-sql: true # 开启慢SQL记录功能,启用后如果遇到执行很慢的 SQL，便会输出到日志中，
          slow-sql-millis: 5000  # 默认3000毫秒，这里超过5s，就是慢，记录到日志
          merge-sql: true
          db-type: mysql
        # 防御SQL注入
        wall:
          config:
            multi-statement-allow: true
      db-type: mysql
    dynamic:
      strict: false
      primary: master
      datasource:
        master:
          type: com.alibaba.druid.pool.DruidDataSource
#          driver-class-name: com.mysql.cj.jdbc.Driver
          driver-class-name: com.p6spy.engine.spy.P6SpyDriver
          url: jdbc:p6spy:mysql://localhost:3306/db_security?serverTimezone=GMT%2B8&characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&useAffectedRows=true
          username: root
          password: root
#          password: ENC(${datasource.master.encryptedPassword})
#          public-key: ${datasource.master.privateKey}
          druid: # 全局druid参数，单独数据源配置为空时取全局配置
            # 初始化大小，最小，最大
            initial-size: 5
            min-idle: 5
            #     CPU核数+1，也可以大些但不要超过20，数据库加锁时连接过多性能下降
            maxActive: 8
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            validationQuery: SELECT 1
            testWhileIdle: true
            #     设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
            testOnBorrow: false
            #     设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
            testOnReturn: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,slf4j #,wall
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
            #     保持长连接
            keepAlive: true
            useGlobalDataSourceStat: true
            stat:
              enabled: true
              # 慢SQL记录
              log-slow-sql: true
              slow-sql-millis: 30000
              merge-sql: false
            wall:
              function-check: false
              strict-syntax-check: false
              multi-statement-allow: true
        slave01:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/youlai-nacos?serverTimezone=GMT%2B8&characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&useAffectedRows=true
          username: root
          password: root
#          password: ENC(${datasource.slave01.encryptedPassword})
#          public-key: ${datasource.slave01.privateKey}
          druid: # 全局druid参数，单独数据源配置为空时取全局配置
            initial-size: 5
            min-idle: 5
            maxActive: 8
            maxWait: 60000
            timeBetweenEvictionRunsMillis: 60000
            minEvictableIdleTimeMillis: 300000
            # 配置一个连接在池中最大生存的时间，单位是毫秒
            maxEvictableIdleTimeMillis: 600000
            #标记是否删除泄露的连接，如果连接超出removeAbandonedTimeout的限制，且该属性设置为 true，则连接被认为是被泄露并且可以被删除
            removeAbandoned: true
            validationQuery: SELECT 1
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            filters: stat,wall,slf4j
            connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
            #     保持长连接
            keepAlive: true
            useGlobalDataSourceStat: true
            stat:
              enabled: true
              # 慢SQL记录
              log-slow-sql: true
              slow-sql-millis: 30000
              merge-sql: false
            wall:
              function-check: false
              strict-syntax-check: false
              multi-statement-allow: true

#datasource:
#  master:
#    # 填写生成的加密密码
#    encryptedPassword: EdBglM1MEmgPN8f3xmSBVzxJZTCpXe0YZwdDtnaJsefHZUp/GOL/BHTgJy+74i4SoCVy68Hxa+gXNrcrmsvnMA==
#    privateKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALuVsspW3jiUun8uCjAzK24N0NB7motUDmndMdJMzdeDBHGySbCkI2StZAJlNwLKpTg8yT1kfNRrBZzy0ysbfO0CAwEAAQ==
#  slave01:
#    encryptedPassword: IsJkMEr9vWsjn9GdEjHIu3JZbTTFvQ7z74Tznn0oi4XtEiguOwf9bUn869Ku9dZP6BdD+jVBDYX4gGQCO99GZQ==
#    privateKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKTnmr1JLjUcAu3nSzL29aA/izsu2mlktQzFejTzz5lTv0J9dwPoNfRINP7PUzwp16dPVy4lgM3LLhOYdvV16ecCAwEAAQ==

# mybatis-plus相关配置
mybatis-plus:
  configuration:
    cache-enabled: false #开启二级缓存
    #开启sql日志
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 解决oracle更新数据为null时无法转换报错，mysql不会出现此情况
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #实体类所在包
  type-aliases-package: com.xiaosi.wx
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mapper/**.xml,classpath:/mapper/**/*.xml
  global-config:
    db-config:
      #id自增类型配置
      id-type: ASSIGN_ID
      #逻辑删除字段配置
      logic-delete-field: deleted
      logic-not-delete-value: 0
      logic-delete-value: 1
    #控制台mybatis-plus标记
    banner: true
  check-config-location: true # 检查xml是否存在
  type-enums-package: com.xiaosi.wx.enums  #通用枚举开启
# 设置日志级别
logging:
  level:
    root: INFO
    #com.example.demo.dao: debug，可以控制单个包下日志级别
    #config: classpath:log/logback.xml

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.xiaosi.wx
    - group: 'default1'
      paths-to-match: '/**'
      packages-to-scan: com.xiaosi.wx

knife4j:
  enable: true
  setting:
    language: zh_cn
rsa:
  key:
    publicKey: classpath:/keys/rsa_key.pub
    privateKey: classpath:/keys/rsa_key
jjwt:
  token:
    tokenHeader: Authorization
    tokenPrefix: Bearer
    tokenExpiredMs: 20000000000
    jwtTokenSecret: 1234567890abcdef1234567890abcdef

decorator:
  datasource:
    p6spy:
      logging: slf4j
      log-file: spy.log
      log-format: executionTime:%(executionTime) | sql:%(sqlSingleLine)
tenant:
  # 是否开启租户模式
  enable: true
  # 需要排除的多租户的表
  exclusionTable:
    - "sys_role"
    - "sys_menu"
  # 租户字段名称
  column: tenant_id
  tables:
    - "sys_persistent_login"
